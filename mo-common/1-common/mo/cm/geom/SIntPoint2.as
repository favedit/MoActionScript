package mo.cm.geom
{
   import mo.cm.stream.IInput;
   import mo.cm.stream.IOutput;
   
   //============================================================
   // <T>二维整数坐标。</T>
   //============================================================
   public class SIntPoint2
   {
      // 横坐标
      public var x:int; 
      
      // 纵坐标
      public var y:int; 
      
      //============================================================
      // <T>构造二维整数坐标。</T>
      //
      // @param px 横坐标
      // @param py 横坐标
      //============================================================
      public function SIntPoint2(px:int = 0, py:int = 0){
         x = px;
         y = py;
      }
      
      //============================================================
      // <T>判断是否为空。</T>
      //
      // @return 是否为空
      //============================================================
      public function isEmpty():Boolean{
         return (0 == x) && (0 == y);
      }
      
      //============================================================
      // <T>判断是否相等。</T>
      //
      // @param p:value 二维点
      // @return 是否相等
      //============================================================
      public function equals(p:SIntPoint2):Boolean{
         return (x == p.x) && (y == p.y); 
      }
      
      //============================================================
      // <T>接收二维坐标。</T>
      //
      // @param p:value 二维坐标
      //============================================================
      public function assign(p:SIntPoint2):void{
         x = p.x;
         y = p.y;
      }
      
      //============================================================
      // <T>接收三维坐标。</T>
      //
      // @param p:value 三维坐标
      //============================================================
      public function assign3(p:SIntPoint3):void{
         x = p.x;
         y = p.y;
      }
      
      //============================================================
      // <T>设置坐标。</T>
      //
      // @param px 横坐标
      // @param py 横坐标
      //============================================================
      public function set(px:int, py:int):void{
         x = px;
         y = py;
      }
      
      //============================================================
      // <T>解析字符串。</T>
      //
      // @param p:value 字符串
      //============================================================
      public function parse(p:String):void{
         if(p && p.length > 0){
            var s:int = p.indexOf(",");
            if(-1 != s){
               x = parseInt(p.substring(0, s)); 
               y = parseInt(p.substring(s + 1)); 
            }else{
               x = y = parseInt(p); 
            }
         }
      }
      
      //============================================================
      // <T>序列化数据信息。</T>
      //
      // @param p:output 输出数据流
      //============================================================
      public function serialize(p:IOutput):void{
         p.writeInt32(x);
         p.writeInt32(y);
      }
      
      //============================================================
      // <T>序列化数据信息。</T>
      //
      // @param p:output 输出数据流
      //============================================================
      public function serialize16(p:IOutput):void{
         p.writeInt16(x);
         p.writeInt16(y);
      }
      
      //============================================================
      // <T>反序列化数据信息。</T>
      //
      // @param p:input 输入数据流
      //============================================================
      public function unserialize(p:IInput):void{
         x = p.readInt32();
         y = p.readInt32();
      }
      
      //============================================================
      // <T>反序列化数据信息。</T>
      //
      // @param p:input 输入数据流
      //============================================================
      public function unserialize16(p:IInput):void{
         x = p.readInt16();
         y = p.readInt16();
      }
      
      //============================================================
      // <T>获得字符串。</T>
      //
      // @return 字符串
      //============================================================
     public function toString():String{
         return x + "," + y;
      }
   }
}